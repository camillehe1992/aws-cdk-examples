{
 "Resources": {
  "WebsiteBucket75C24D94": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "Private",
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "static-site-s3-824709318323-ap-south-1",
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "BucketOwnerEnforced"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/WebsiteBucket/Resource"
   }
  },
  "WebsiteBucketPolicyE10E3262": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "WebsiteBucket75C24D94"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "CloudFrontOriginAccessIdentity04EB66DA",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "WebsiteBucket75C24D94",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/WebsiteBucket/Policy/Resource"
   }
  },
  "CloudFrontOriginAccessIdentity04EB66DA": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/CloudFrontOriginAccessIdentity/Resource"
   }
  },
  "Function76856677": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "Name": "ap-south-1StaticSiteS3CdkStackFunction84C1AD98",
    "AutoPublish": true,
    "FunctionCode": "// url-rewrite.js\r\n// See other AWS examples at https://github.com/aws-samples/amazon-cloudfront-functions/)\r\n\r\nfunction handler(event) {\r\n  const request = event.request;\r\n\r\n  if (request.uri.endsWith(\"/\")) {\r\n    request.uri += \"index.html\";\r\n  }\r\n\r\n  return request;\r\n}\r\n",
    "FunctionConfig": {
     "Comment": "ap-south-1StaticSiteS3CdkStackFunction84C1AD98",
     "Runtime": "cloudfront-js-1.0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/Function/Resource"
   }
  },
  "SecurityHeadersResponseHeaderPolicy85731267": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "Comment": "Security headers response header policy",
     "Name": "StaticSiteS3CdkStackSecurityHeadersResponseHeaderPolicy1E714DF6",
     "SecurityHeadersConfig": {
      "ContentSecurityPolicy": {
       "ContentSecurityPolicy": "default-src 'self'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'",
       "Override": true
      },
      "ContentTypeOptions": {
       "Override": true
      },
      "FrameOptions": {
       "FrameOption": "DENY",
       "Override": true
      },
      "ReferrerPolicy": {
       "Override": true,
       "ReferrerPolicy": "strict-origin-when-cross-origin"
      },
      "StrictTransportSecurity": {
       "AccessControlMaxAgeSec": 63072000,
       "IncludeSubdomains": true,
       "Override": true,
       "Preload": true
      },
      "XSSProtection": {
       "ModeBlock": true,
       "Override": true,
       "Protection": true
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/SecurityHeadersResponseHeaderPolicy/Resource"
   }
  },
  "CloudFrontDistributionBA64CE3A": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "FunctionAssociations": [
       {
        "EventType": "viewer-request",
        "FunctionARN": {
         "Fn::GetAtt": [
          "Function76856677",
          "FunctionARN"
         ]
        }
       }
      ],
      "ResponseHeadersPolicyId": {
       "Ref": "SecurityHeadersResponseHeaderPolicy85731267"
      },
      "TargetOriginId": "StaticSiteS3CdkStackCloudFrontDistributionOrigin1AAC04F2B",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "WebsiteBucket75C24D94",
         "RegionalDomainName"
        ]
       },
       "Id": "StaticSiteS3CdkStackCloudFrontDistributionOrigin1AAC04F2B",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "CloudFrontOriginAccessIdentity04EB66DA"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/CloudFrontDistribution/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Qyw6CQAz8Fu+wPtB4VgzRkwY/wEC3mALumu2uxhD+XRAUD5xmpp1pmy5EsBKzSfJkH2Thl5SK6mwTKLymdKk4ENXWQYHWCzPVsw5OuiR4DeVO1x6U2snMaGVFdTR0JbUBQOaDRGXJfhJh64laz6gjcgosadVafzxGvmvFuMdEouFh/XhjR2wNpe4751/XdZ/TzgDWntISRc7Tx3wp5uvmHTkT+cY119xQxB2+AfCDoLAqAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "StaticSiteS3CdkStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}